# Generated by Django 5.2.5 on 2025-08-27 19:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(max_length=50, unique=True)),
                ('device_type', models.CharField(choices=[('PV', 'PV Panel'), ('WindTurbine', 'Wind Turbine'), ('FuelTurbine', 'Fuel Turbine'), ('FuelCell', 'Fuel Cell'), ('BESS', 'BESS')], max_length=20)),
                ('tag_prefix', models.CharField(max_length=10)),
                ('io_device', models.CharField(max_length=50)),
                ('protocol', models.CharField(choices=[('modbus', 'Modbus'), ('iec', 'IEC 61850')], max_length=10)),
                ('modbus_variant', models.CharField(blank=True, choices=[('tcp', 'TCP/IP'), ('rtu', 'RTU')], max_length=5, null=True)),
                ('device_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('modbus_port', models.IntegerField(blank=True, default=502, null=True)),
                ('port_name', models.CharField(blank=True, max_length=20)),
                ('unit_number', models.IntegerField(blank=True, null=True)),
                ('memory', models.BooleanField(default=True)),
                ('gateway_address', models.GenericIPAddressField(blank=True, null=True)),
                ('slave_id', models.IntegerField(blank=True, null=True)),
                ('port_name_rtu', models.CharField(blank=True, max_length=20)),
                ('memory_rtu', models.BooleanField(default=True)),
                ('serial_port', models.CharField(blank=True, max_length=20)),
                ('baud_rate', models.IntegerField(blank=True, default=38400, null=True)),
                ('data_bits', models.IntegerField(blank=True, default=8, null=True)),
                ('parity', models.CharField(blank=True, default='None', max_length=10)),
                ('stop_bits', models.IntegerField(blank=True, default=1, null=True)),
                ('iec_device_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('iec_port', models.IntegerField(blank=True, default=102, null=True)),
                ('ied_name', models.CharField(blank=True, max_length=64)),
                ('access_point', models.CharField(blank=True, max_length=32)),
                ('logical_device', models.CharField(blank=True, max_length=64)),
                ('report_control', models.CharField(blank=True, max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alarm_name', models.CharField(max_length=50)),
                ('alarm_type', models.CharField(choices=[('analog', 'Analog'), ('digital', 'Digital'), ('advanced', 'Advanced')], max_length=10)),
                ('category', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('event', 'Event')], max_length=10)),
                ('alarm_tag', models.CharField(max_length=30)),
                ('equipment', models.CharField(max_length=30)),
                ('item_name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alarms', to='webapp.device')),
            ],
            options={
                'ordering': ['alarm_name'],
                'unique_together': {('device', 'alarm_name')},
            },
        ),
        migrations.CreateModel(
            name='Trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_description', models.CharField(max_length=100)),
                ('trend_types', models.CharField(choices=[('event', 'Event'), ('periodic', 'Periodic'), ('periodic-event', 'Periodic-Event')], max_length=15)),
                ('tag_name', models.CharField(max_length=50)),
                ('item_name', models.CharField(max_length=30)),
                ('time', models.CharField(default='00:00', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trends', to='webapp.device')),
            ],
            options={
                'ordering': ['tag_description'],
                'unique_together': {('device', 'tag_description')},
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=30)),
                ('io_device', models.CharField(max_length=50)),
                ('tag_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=20)),
                ('equipment', models.CharField(max_length=50)),
                ('data_type', models.CharField(choices=[('float', 'Float'), ('int', 'Integer'), ('bool', 'Boolean'), ('string', 'String'), ('REAL', 'Real'), ('INT', 'Integer')], default='float', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='webapp.device')),
            ],
            options={
                'ordering': ['item_name'],
                'unique_together': {('device', 'item_name')},
            },
        ),
    ]
